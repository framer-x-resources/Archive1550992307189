import * as React from 'react'
import { PropertyControls, ControlType } from 'framer'

import { Helmet } from 'react-helmet'

// Define type of property
interface Props {
  font: string
  googleFont: string
  type: string
  debug: boolean
}

export class ruucm_fonts extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    font: 'SFProKRDisplay',
    type: 'Ruucm',
    debug: true,
    width: 50,
    height: 50,
  }

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    font: {
      type: ControlType.Enum,
      title: 'Font',
      options: ['SFProKRDisplay', 'NanumSquare'],
    },
    googleFont: { type: ControlType.String, title: 'Google Font' },

    type: {
      type: ControlType.SegmentedEnum,
      title: 'Font Type',
      options: ['Ruucm', 'Google'],
    },
    debug: {
      type: ControlType.Boolean,
      title: 'Debug',
    },
  }

  render() {
    return (
      <div
        style={{
          background: this.props.debug ? 'rgba(255, 0, 0, 0.8)' : 'transparent',
          width: '100%',
          height: '100%',
        }}
      >
        {this.props.type == 'Ruucm' ? (
          <Helmet>
            <link
              href={`https://ruucm.github.io/webfonts/${this.props.font}.css`}
              rel="stylesheet"
            />
          </Helmet>
        ) : this.props.googleFont == 'Montserrat' ? (
          <Helmet>
            <link
              href="https://fonts.googleapis.com/css?family=Montserrat:200,200i,400,700,900"
              rel="stylesheet"
            />
          </Helmet>
        ) : (
          <Helmet>
            <link
              href={`https://fonts.googleapis.com/css?family=${
                this.props.googleFont
              }`}
              rel="stylesheet"
            />
          </Helmet>
        )}
      </div>
    )
  }
}
